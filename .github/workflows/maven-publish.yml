# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
    push:
        branches: ["main"]

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - uses: actions/checkout@v4
            - name: Set up JDK 21
              uses: actions/setup-java@v4
              with:
                  java-version: "21"
                  distribution: "temurin"
                  server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
                  settings-path: ${{ github.workspace }} # location for the settings.xml file

            # Install Docker on Github Action
            - name: Install Docker Compose
              run: |
                  sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                  sudo chmod +x /usr/local/bin/docker-compose
                  docker-compose version

            # Run my Docker Compose
            - name: Start Docker Compose
              run: docker-compose up -d --build

            - name: Wait for MySQL to be ready
              run: |
                  echo "Waiting for MySQL to be ready..."
                  until docker exec mysql mysql -uuser -ppassword -e "SELECT 1;" db 2>/dev/null; do
                    sleep 2
                    echo "Waiting..."
                  done
                  echo "MySQL is ready!"

            - name: Configure Maven settings
              run: |
                  mkdir -p ~/.m2
                  echo "<settings>
                    <servers>
                      <server>
                        <id>github</id>
                        <username>${{ github.actor }}</username>
                        <password>${{ secrets.GH_PAT }}</password>
                      </server>
                    </servers>
                  </settings>" > ~/.m2/settings.xml

            - name: Build with Maven
              run: mvn -B package --file pom.xml

            - name: Deploy
              run: mvn deploy --settings ~/.m2/settings.xml
              env:
                  USERNAME: ${{ github.actor }}
                  GITHUB_TOKEN: ${{ secrets.GIT_PAT }}

            # Close Containers
            - name: Stop Docker Compose
              if: always()
              run: docker-compose down
